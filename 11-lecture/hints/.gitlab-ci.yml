include:
- local: /docker.yml

stages:
- validate
- build
- docker
- deploy
- retag
- release

Golangci-lint:
  stage: validate
  image: golangci/golangci-lint:v1.45
  script:
  - golangci-lint run ./...
  except:
  - tags

Yamllint:
  stage: validate
  image:
    name: cytopia/yamllint:1.26
    entrypoint: ["/bin/ash", "-c"]
  script:
  - yamllint . 
  except:
  - tags

Go-tests:
  stage: validate
  image: golang:1.17
  script:
  - go test ./... -v
  except:
  - tags

Build and e2e:
  stage: build
  image: golang:1.17
  script:
  - CGO_ENABLED=0 go build ./
  - './verybigdataapp &'
  - RESULT=$(curl "localhost:58080/?a=6&b=4")
  - '[[ "$RESULT" == "10" ]]'
  except:
  - tags
  artifacts:
    paths:
    - verybigdataapp

Docker:
  stage: docker
  extends: .build_docker_image
  variables:
    DOCKER_HOST: ""
  services: []
  tags:
  - docker
  except:
  - tags

Deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:1.21.13
    entrypoint: [""]
  variables:
    KUBECONFIG: /tmp/.kubeconfig
  script:
  - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_API_URL
  - kubectl config set-credentials ci --token=$K8S_CI_TOKEN
  - kubectl config set-context ci --cluster=k8s --user=ci
  - kubectl config use-context ci
  - |-
    if [[ "${CI_COMMIT_REF_NAME}" == "main" ]]
    then
      ENVIRONMENT=staging
    else
      ENVIRONMENT=dev
    fi
  - IMAGE_TAG=${CI_COMMIT_SHORT_SHA}
  - sed -i "s|__ENVIRONMENT__|${ENVIRONMENT}| ; s|__CI_REGISTRY_IMAGE__|${CI_REGISTRY_IMAGE}| ; s|__IMAGE_TAG__|${IMAGE_TAG}|" manifests/*.yml
  - kubectl apply -n $ENVIRONMENT -f manifests/
  except:
  - tags

Retag:
  stage: retag
  extends: .build_docker_image
  tags:
  - docker
  variables:
    DOCKER_HOST: ""
  services: []
  script:
  - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
  - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA} ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  only:
  - tags

Release:
  stage: release
  image:
    name: bitnami/kubectl:1.21.13
    entrypoint: [""]
  variables:
    KUBECONFIG: /tmp/.kubeconfig
    ENVIRONMENT: prod
  script:
  - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_API_URL
  - kubectl config set-credentials ci --token=$K8S_CI_TOKEN
  - kubectl config set-context ci --cluster=k8s --user=ci
  - kubectl config use-context ci
  - IMAGE_TAG=${CI_COMMIT_TAG}
  - sed -i "s|__ENVIRONMENT__|${ENVIRONMENT}| ; s|__CI_REGISTRY_IMAGE__|${CI_REGISTRY_IMAGE}| ; s|__IMAGE_TAG__|${IMAGE_TAG}|" manifests/*.yml
  - kubectl apply -n $ENVIRONMENT -f manifests/
  only:
  - tags
